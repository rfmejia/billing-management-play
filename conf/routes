# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Entry point and documentation
GET     /api                            controllers.Application.index
GET     /api/docs                       controllers.Application.documentation

# Tenants
GET     /api/tenants                    controllers.Tenants.list(offset: Int ?= 0, limit: Int ?= 10)
GET     /api/tenants/:id                controllers.Tenants.show(id: Int)
POST    /api/tenants                    controllers.Tenants.create
PUT     /api/tenants/:id                controllers.Tenants.edit(id: Int)
DELETE  /api/tenants/:id                controllers.Tenants.delete(id: Int)

# Invitations
GET     /api/invites                    controllers.Invites.list(offset: Int ?= 0, limit: Int ?= 10)
GET     /api/invites/:username          controllers.Invites.show(username: String)
POST    /api/invites                    controllers.Invites.create
PUT     /api/invites/:username          controllers.Invites.edit(username: String)
DELETE  /api/invites/:username          controllers.Invites.delete(username: String)

# Users
GET     /api/users                      controllers.Users.list(offset: Int ?= 0, limit: Int ?= 10)
GET     /api/users/:username            controllers.Users.show(username: String)
#POST    /api/users/:username            controllers.Users.create(username: String)
POST    /api/users/:username            controllers.Users.createViaInvite(username: String)
PUT     /api/users/:username            controllers.Users.edit(username: String)
DELETE  /api/users/:username            controllers.Users.delete(username: String)

GET     /api/setupTestEnvironment       controllers.TestEnvironment.setup
GET     /api/testFail                   controllers.TestEnvironment.fail

# ---- SecureSocial routes ----
# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized


# ---- Web application routes ----
# Note: must be last because of the catch-all /*file route

# Map static resources from the /public folder to the /assets URL path
GET     /                               controllers.Assets.at(path="/public", file="index.html")
GET     /*file                          controllers.Assets.at(path="/public", file)
