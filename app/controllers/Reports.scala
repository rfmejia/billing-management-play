package controllers

import com.nooovle._
import com.nooovle.slick.ConnectionFactory
import com.github.tototoshi.slick.H2JodaSupport
import com.nooovle.slick.models._
import org.joda.time.{ DateTime, YearMonth }
import org.locker47.json.play._
import play.api._
import play.api.libs.json._
import play.api.mvc.{ Action, RequestHeader }
import scala.slick.driver.H2Driver.simple._
import scala.util.{ Try, Success, Failure }
import securesocial.core._

class Reports(override implicit val env: RuntimeEnvironment[User])
  extends ApiController[User] {

  def show(year: Int, month: Int) = Action { implicit request =>
    val forMonth = new YearMonth(year, month)
    val docs = ConnectionFactory.connect withSession { implicit session =>
      val query = for (doc <- documents if doc.year === year && doc.month === month) yield doc
      query.list
    }

    val totals: Amounts = docs.map(Templates.extractTotals).foldLeft(Amounts.ZERO)(_ + _)
    val paid: Amounts = docs.map(Templates.extractPaid).foldLeft(Amounts.ZERO)(_ + _)
    val unpaid = totals - paid

    val self = routes.Reports.show(year, month)
    val generationTime = DateTime.now
    val obj = HalJsObject.create(self.absoluteURL())
      .withCurie("hoa", Application.defaultCurie)
      .withLink("profile", "hoa:report")
      // .withLink("hoa:user", routes.Users.show(request.user.userId).absoluteURL(),
      //   Some("Generated by"))
      .withField("forMonth", JsObject(Seq(
        "name" -> JsString(forMonth.monthOfYear.getAsText()),
        "month" -> JsNumber(forMonth.getMonthOfYear),
        "year" -> JsNumber(forMonth.getYear))))
      .withField("generated", JsObject(Seq(
        "name" -> JsString(generationTime.monthOfYear.getAsText()),
        "month" -> JsNumber(generationTime.getMonthOfYear),
        "year" -> JsNumber(generationTime.getYear))))
      .withField("total", totals.asJsObject)
      .withField("paid", paid.asJsObject)
      .withField("unpaid", unpaid.asJsObject)
      .withField("count", docs.size)
    Ok(obj.asJsValue)
  }
}
